name: Build and Package

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Generate version number
      id: gitversion
      run: gitversion /output json /showvariable FullSemVer

    - name: Debug - Print GitVersion
      run: echo "GitVersion: ${{ steps.gitversion.outputs.FullSemVer }}"

    - name: Update version in .csproj
      run: |
        sed -i 's/<Version>.*<\/Version>/<Version>${{ steps.gitversion.outputs.FullSemVer }}<\/Version>/' YourProject.csproj

    - name: Restore dependencies again
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish --configuration Release --no-build --output ./publish

    - name: Create update.zip
      run: |
        cd publish
        zip -r ../update.zip .

    - name: Generate update_info.json
      run: |
        echo '{
          "version": "${{ steps.gitversion.outputs.FullSemVer }}",
          "updateUrl": "https://github.com/streesobrs/Updater/releases/download/v${{ steps.gitversion.outputs.FullSemVer }}/update.zip"
        }' > update_info.json

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: update-package
        path: update.zip

    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.gitversion.outputs.FullSemVer }}
        release_name: Release v${{ steps.gitversion.outputs.FullSemVer }}
        draft: false
        prerelease: false

    - name: Upload update.zip to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./update.zip
        asset_name: update.zip
        asset_content_type: application/zip

    - name: Upload update_info.json to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./update_info.json
        asset_name: update_info.json
        asset_content_type: application/json
